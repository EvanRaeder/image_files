name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --verbose  --release
    - name: Run tests
      run: cargo test --verbose
    - name: Build archive
      shell: bash
      run: |
        # Replace with the name of your binary
        binary_name="image_files"
        echo "VERSION=0.1.0" >> $GITHUB_ENV
        echo "TARGET=x86_64-pc-windows-msvc" >> $GITHUB_ENV
        echo "OS=windows-latest" >> $GITHUB_ENV

        dirname="$binary_name-${{ env.VERSION }}-${{ matrix.target }}"
        mkdir "$dirname"
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          mv "D:\a\image_files\image_files\target\release\image_files.exe" "$dirname"
        else
          mv "D:\a\image_files\image_files\target\release\image_files.exe" "$dirname"
        fi

        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          7z a "$dirname.zip" "$dirname"
          echo "ASSET=$dirname.zip" >> $GITHUB_ENV
        else
          tar -czf "$dirname.tar.gz" "$dirname"
          echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
        fi
        
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ env.ASSET }}
